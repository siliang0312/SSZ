// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSZ.Infrastructure.Data;

#nullable disable

namespace SSZ.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521064643_add_plan_unique")]
    partial class add_plan_unique
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("SSZ.Core.Aggregate.Equipment.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EquipmentTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductionLineGuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.EquipmentType.EquipmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.Maintenance.MaintenanceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EquipmentTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceItems");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.Maintenance.MaintenancePlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MaintenanceItemId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NextDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId", "MaintenanceItemId")
                        .IsUnique();

                    b.ToTable("MaintenancePlans");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.Maintenance.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuditOpinion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CompleteTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentTypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Feedback")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaintenanceItemContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaintenanceItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceRecords");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.Maintenance.MaintenanceTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AuditOpinion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Feedback")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MaintenanceItemId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MaintenancePlanId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceTasks");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.ProductionLine.ProductionLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductionLines");
                });

            modelBuilder.Entity("SSZ.Core.ContributorAggregate.Contributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.Maintenance.MaintenanceItem", b =>
                {
                    b.OwnsOne("SSZ.Core.Aggregate.Maintenance.MaintenanceCycle", "MaintenanceCycle", b1 =>
                        {
                            b1.Property<Guid>("MaintenanceItemId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("CycleType")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DayOfPeriod")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("IntervalTime")
                                .HasColumnType("INTEGER");

                            b1.HasKey("MaintenanceItemId");

                            b1.ToTable("MaintenanceItems");

                            b1.WithOwner()
                                .HasForeignKey("MaintenanceItemId");
                        });

                    b.Navigation("MaintenanceCycle");
                });

            modelBuilder.Entity("SSZ.Core.Aggregate.ProductionLine.ProductionLine", b =>
                {
                    b.OwnsMany("SSZ.Core.Aggregate.ProductionLine.EquipmentId", "Equipments", b1 =>
                        {
                            b1.Property<Guid>("ProductionLineId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("Value")
                                .HasColumnType("TEXT");

                            b1.HasKey("ProductionLineId", "Id");

                            b1.ToTable("EquipmentId");

                            b1.WithOwner()
                                .HasForeignKey("ProductionLineId");
                        });

                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("SSZ.Core.ContributorAggregate.Contributor", b =>
                {
                    b.OwnsOne("SSZ.Core.ContributorAggregate.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<int>("ContributorId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Extension")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ContributorId");

                            b1.ToTable("Contributors");

                            b1.WithOwner()
                                .HasForeignKey("ContributorId");
                        });

                    b.Navigation("PhoneNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
